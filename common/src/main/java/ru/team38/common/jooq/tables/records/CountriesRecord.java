/*
 * This file is generated by jOOQ.
 */
package ru.team38.common.jooq.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import ru.team38.common.jooq.tables.Countries;


/**
 * Таблица для хранения стран
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CountriesRecord extends UpdatableRecordImpl<CountriesRecord> implements Record4<Long, Long, String, Boolean> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>socialnet.countries.id</code>. Уникальный идентификатор
     * страны
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>socialnet.countries.id</code>. Уникальный идентификатор
     * страны
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>socialnet.countries.country_id</code>. ID страны
     */
    public void setCountryId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>socialnet.countries.country_id</code>. ID страны
     */
    public Long getCountryId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>socialnet.countries.country_name</code>. Название страны
     */
    public void setCountryName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>socialnet.countries.country_name</code>. Название страны
     */
    public String getCountryName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>socialnet.countries.is_deleted</code>. Флаг,
     * указывающий, удалена ли страна
     */
    public void setIsDeleted(Boolean value) {
        set(3, value);
    }

    /**
     * Getter for <code>socialnet.countries.is_deleted</code>. Флаг,
     * указывающий, удалена ли страна
     */
    public Boolean getIsDeleted() {
        return (Boolean) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, Long, String, Boolean> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, Long, String, Boolean> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Countries.COUNTRIES.ID;
    }

    @Override
    public Field<Long> field2() {
        return Countries.COUNTRIES.COUNTRY_ID;
    }

    @Override
    public Field<String> field3() {
        return Countries.COUNTRIES.COUNTRY_NAME;
    }

    @Override
    public Field<Boolean> field4() {
        return Countries.COUNTRIES.IS_DELETED;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getCountryId();
    }

    @Override
    public String component3() {
        return getCountryName();
    }

    @Override
    public Boolean component4() {
        return getIsDeleted();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getCountryId();
    }

    @Override
    public String value3() {
        return getCountryName();
    }

    @Override
    public Boolean value4() {
        return getIsDeleted();
    }

    @Override
    public CountriesRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public CountriesRecord value2(Long value) {
        setCountryId(value);
        return this;
    }

    @Override
    public CountriesRecord value3(String value) {
        setCountryName(value);
        return this;
    }

    @Override
    public CountriesRecord value4(Boolean value) {
        setIsDeleted(value);
        return this;
    }

    @Override
    public CountriesRecord values(Long value1, Long value2, String value3, Boolean value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CountriesRecord
     */
    public CountriesRecord() {
        super(Countries.COUNTRIES);
    }

    /**
     * Create a detached, initialised CountriesRecord
     */
    public CountriesRecord(Long id, Long countryId, String countryName, Boolean isDeleted) {
        super(Countries.COUNTRIES);

        setId(id);
        setCountryId(countryId);
        setCountryName(countryName);
        setIsDeleted(isDeleted);
        resetChangedOnNotNull();
    }
}
