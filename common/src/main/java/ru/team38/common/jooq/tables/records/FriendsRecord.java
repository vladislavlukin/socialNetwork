/*
 * This file is generated by jOOQ.
 */
package ru.team38.common.jooq.tables.records;


import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;

import ru.team38.common.jooq.tables.Friends;


/**
 * Таблица сущности отношения аккаунта к аккаунту
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FriendsRecord extends UpdatableRecordImpl<FriendsRecord> implements Record6<Long, String, UUID, UUID, String, Short> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>socialnet.friends.id</code>. Уникальный идентификатор
     * отношения
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>socialnet.friends.id</code>. Уникальный идентификатор
     * отношения
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>socialnet.friends.status_code</code>. Текстовый код -
     * статус отношения
     */
    public void setStatusCode(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>socialnet.friends.status_code</code>. Текстовый код -
     * статус отношения
     */
    public String getStatusCode() {
        return (String) get(1);
    }

    /**
     * Setter for <code>socialnet.friends.account_from_id</code>. Уникальный
     * идентификатор субъекта отношения
     */
    public void setAccountFromId(UUID value) {
        set(2, value);
    }

    /**
     * Getter for <code>socialnet.friends.account_from_id</code>. Уникальный
     * идентификатор субъекта отношения
     */
    public UUID getAccountFromId() {
        return (UUID) get(2);
    }

    /**
     * Setter for <code>socialnet.friends.requested_account_id</code>.
     * Уникальный идентификатор объекта отношения
     */
    public void setRequestedAccountId(UUID value) {
        set(3, value);
    }

    /**
     * Getter for <code>socialnet.friends.requested_account_id</code>.
     * Уникальный идентификатор объекта отношения
     */
    public UUID getRequestedAccountId() {
        return (UUID) get(3);
    }

    /**
     * Setter for <code>socialnet.friends.previous_status</code>. Текстовый код
     * - предыдущего статуса отношения
     */
    public void setPreviousStatus(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>socialnet.friends.previous_status</code>. Текстовый код
     * - предыдущего статуса отношения
     */
    public String getPreviousStatus() {
        return (String) get(4);
    }

    /**
     * Setter for <code>socialnet.friends.rating</code>. Рейтинг
     */
    public void setRating(Short value) {
        set(5, value);
    }

    /**
     * Getter for <code>socialnet.friends.rating</code>. Рейтинг
     */
    public Short getRating() {
        return (Short) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, String, UUID, UUID, String, Short> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Long, String, UUID, UUID, String, Short> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Friends.FRIENDS.ID;
    }

    @Override
    public Field<String> field2() {
        return Friends.FRIENDS.STATUS_CODE;
    }

    @Override
    public Field<UUID> field3() {
        return Friends.FRIENDS.ACCOUNT_FROM_ID;
    }

    @Override
    public Field<UUID> field4() {
        return Friends.FRIENDS.REQUESTED_ACCOUNT_ID;
    }

    @Override
    public Field<String> field5() {
        return Friends.FRIENDS.PREVIOUS_STATUS;
    }

    @Override
    public Field<Short> field6() {
        return Friends.FRIENDS.RATING;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getStatusCode();
    }

    @Override
    public UUID component3() {
        return getAccountFromId();
    }

    @Override
    public UUID component4() {
        return getRequestedAccountId();
    }

    @Override
    public String component5() {
        return getPreviousStatus();
    }

    @Override
    public Short component6() {
        return getRating();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getStatusCode();
    }

    @Override
    public UUID value3() {
        return getAccountFromId();
    }

    @Override
    public UUID value4() {
        return getRequestedAccountId();
    }

    @Override
    public String value5() {
        return getPreviousStatus();
    }

    @Override
    public Short value6() {
        return getRating();
    }

    @Override
    public FriendsRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public FriendsRecord value2(String value) {
        setStatusCode(value);
        return this;
    }

    @Override
    public FriendsRecord value3(UUID value) {
        setAccountFromId(value);
        return this;
    }

    @Override
    public FriendsRecord value4(UUID value) {
        setRequestedAccountId(value);
        return this;
    }

    @Override
    public FriendsRecord value5(String value) {
        setPreviousStatus(value);
        return this;
    }

    @Override
    public FriendsRecord value6(Short value) {
        setRating(value);
        return this;
    }

    @Override
    public FriendsRecord values(Long value1, String value2, UUID value3, UUID value4, String value5, Short value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FriendsRecord
     */
    public FriendsRecord() {
        super(Friends.FRIENDS);
    }

    /**
     * Create a detached, initialised FriendsRecord
     */
    public FriendsRecord(Long id, String statusCode, UUID accountFromId, UUID requestedAccountId, String previousStatus, Short rating) {
        super(Friends.FRIENDS);

        setId(id);
        setStatusCode(statusCode);
        setAccountFromId(accountFromId);
        setRequestedAccountId(requestedAccountId);
        setPreviousStatus(previousStatus);
        setRating(rating);
        resetChangedOnNotNull();
    }
}
